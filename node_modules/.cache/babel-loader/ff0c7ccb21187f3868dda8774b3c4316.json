{"ast":null,"code":"var _jsxFileName = \"/Users/saraal/Desktop/front-end-class/tinyhouses/src/pages/Contact.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"form\", {\n    class: \"form contact-form\",\n    action: \"https://formspree.io/donnyburnside1@gmail.com\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        for: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"form-control\",\n        id: \"name\",\n        name: \"name\",\n        type: \"text\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        for: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"form-control\",\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        for: \"subject\",\n        children: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-control\",\n        id: \"subject\",\n        name: \"subject\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          selected: true,\n          disabled: true,\n          children: \"Choose a Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"Option Group\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"subject-one\",\n            children: \"Subject One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"subject-two\",\n            children: \"Subject Two\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"subject-three\",\n            children: \"Subject Three\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"subject-four\",\n          children: \"Subject Four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"subject-five\",\n          children: \"Subject Five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"subject-six\",\n          children: \"Subject Six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        for: \"message\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        id: \"message\",\n        name: \"message\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        for: \"subscribe\",\n        children: \"Subscribe?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"\",\n        id: \"subscribe\",\n        name: \"subscribe\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"button\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"button\",\n        type: \"reset\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Contact;\n\nclass ContactForm {\n  constructor(el) {\n    this.element = el || null;\n    this.action = el.action;\n    this.fields = Object.keys(el.elements).reduce((obj, key) => {\n      if (key === el.elements[key].id) obj[key] = el.elements[key];\n      return obj;\n    }, {});\n    console.log('Contact Form:', this);\n  }\n\n  init() {\n    this.element.addEventListener('submit', event => this.onSubmit(event));\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.element.classList.remove('contact-form--errors');\n    this.element.classList.remove('contact-form--sent');\n    this.element.classList.add('contact-form--loading');\n    this.sendFormData(this.getFormData()).then(response => {\n      if (response.status === 200) {\n        return response.json().then(res => this.onSent(res));\n      } else {\n        throw 'An error occured while submitting the form';\n      }\n    }).catch(err => this.onError(err));\n  }\n\n  onSent(response) {\n    for (let i = 0; i < this.element.querySelectorAll('div').length; i++) {\n      this.element.querySelectorAll('div')[i].classList.add('is-hidden');\n    }\n\n    let successElement = document.createElement('div');\n    successElement.innerHTML = `Message sent successfully`;\n    this.element.appendChild(successElement);\n    this.element.classList.remove('contact-form--loading');\n    this.element.classList.add('contact-form--sent');\n    console.log('Sent:', response.success);\n  }\n\n  onError(err = '') {\n    this.element.classList.remove('contact-form--loading');\n    this.element.classList.add('contact-form--errors');\n    console.error('Error:', err);\n  }\n\n  sendFormData(data = {}) {\n    return new Promise((resolve, reject) => {\n      console.log('Send Data:', data);\n      fetch(this.action, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(data)\n      }).then(response => resolve(response)).catch(err => reject(err));\n    });\n  }\n\n  getFormData() {\n    let formData = {},\n        values = [];\n    Object.keys(this.fields).forEach(key => {\n      switch (this.fields[key].type) {\n        case 'checkbox':\n        case 'radio':\n          {\n            formData[key] = this.fields[key].checked;\n            break;\n          }\n\n        case 'select-one':\n          {\n            if (!this.fields[key][this.fields[key].selectedIndex].disabled) {\n              formData[key] = this.fields[key][this.fields[key].selectedIndex].value;\n            } else {\n              formData[key] = '';\n            }\n\n            break;\n          }\n\n        case 'select-multiple':\n          {\n            Object.keys(this.fields[key].options).forEach(i => {\n              if (this.fields[key].options[i].selected && !this.fields[key].options[i].disabled) {\n                values.push(this.fields[key].options[i].value);\n              }\n            });\n            formData[key] = values.length > 0 ? values.join(', ') : '';\n            break;\n          }\n\n        default:\n          {\n            formData[key] = this.fields[key].value;\n            break;\n          }\n      }\n    });\n    return formData;\n  }\n\n} // Create a new instance of the ContactForm class\n\n\nconst form = new ContactForm(document.querySelector('.contact-form')); // Initialise our instance of the ContactForm class when document has loaded\n\nwindow.onload = event => form.init(); // form.init()\n// class ContactForm {\n//   constructor(config = {}) {\n//     this.elements = {\n//       form: config.form || null,\n//       fields: config.form.elements || null\n//     }\n//     this.action = config.form.getAttribute('action') || null\n//   }\n//   init() {\n//     this.elements.form.addEventListener('submit', (event) => {\n//       return this.onSubmit(event);\n//     });\n//   }\n//   onSubmit(event) {\n//     event.preventDefault();\n//     let data = this.getFormData();\n//     this.sendFormData(data)\n//       .then(response => {\n//         if (response.status === 200) {\n//           this.onSent('Message sent successfully!')\n//         } else {\n//           throw 'An error occured while sending the message.'\n//         }\n//       })\n//     .catch(err => {\n//       this.onError(err);\n//     })\n//   }\n//   getFormData() {\n//     let data = {},\n//         id;\n//     for (let i = 0; i < this.elements.fields.length; i++) {\n//       id = this.elements.fields[i].id;\n//       if (id !== '') data[id] = this.getFieldValue(this.elements.fields[i]);\n//     };\n//     return data;\n//   }\n//   getFieldValue(field) {\n//     let values = [],\n//         value;\n//     switch(nodfield.typeeType) {\n//       case 'radio':\n//       case 'checkbox': {\n//         value = field.checked;\n//         break;\n//       }\n//       case 'select-one': {\n//         if (!field[field.selectedIndex].disabled) {\n//           value = field.value;\n//         } else {\n//           value = '';\n//         }\n//         break;\n//       }\n//       case 'select-multiple': {\n//         for (let i = 0; i < field.options.length; i++) {\n//           if (field.options[i].selected && !field.options[i].disabled) {\n//             values.push(field.options[i].value)\n//           }\n//         }\n//         value = values;\n//         break;\n//       }\n//       default: {\n//         value = field.value;\n//         break;\n//       }\n//     }\n//     return value;\n//   }\n//   sendFormData(data = {}) {\n//     return new Promise((resolve, reject) => {\n//       this.updateState('sending', 'Sending message...');\n// fetch(this.action, {\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   method: 'POST',\n//   body: JSON.stringify(data)\n// })\n// .then(response => {\n//   resolve(response)\n// })\n// .catch(err => {\n//   reject(err)\n// })\n//     })\n//   }\n//   onSent(message = '') {\n//     let el = document.createElement('div');\n//         el.classList.add('sent');\n//         el.innerHTML = '<p>Message sent!</p>';\n//     this.elements.form.appendChild(el);\n//     this.updateState('sent');\n//   }\n//   onError(err = '') {\n//     this.updateState('error', err);\n//   }\n//   updateState(state = 'default', message = '') {\n//     this.elements.form.setAttribute('data-state', state);\n//     this.elements.form.querySelector('small').textContent = message;\n//   }\n// }\n// const form = new ContactForm({\n//   form: document.querySelector('form')\n// });\n// form.init();\n\n\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/saraal/Desktop/front-end-class/tinyhouses/src/pages/Contact.js"],"names":["React","useState","useEffect","db","Contact","ContactForm","constructor","el","element","action","fields","Object","keys","elements","reduce","obj","key","id","console","log","init","addEventListener","event","onSubmit","preventDefault","classList","remove","add","sendFormData","getFormData","then","response","status","json","res","onSent","catch","err","onError","i","querySelectorAll","length","successElement","document","createElement","innerHTML","appendChild","success","error","data","Promise","resolve","reject","fetch","headers","method","body","JSON","stringify","formData","values","forEach","type","checked","selectedIndex","disabled","value","options","selected","push","join","form","querySelector","window","onload"],"mappings":"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AD,CAAR,GAAgB,KAAKN,MAAL,CAAYM,GAAZ,EAAiBkD,KAAjC;AACA;AACD;AA1BH;AA4BD,KA7BD;AA8BA,WAAOP,QAAP;AACD;;AAvGe,C,CA2GlB;;;AACA,MAAMY,IAAI,GAAG,IAAIlE,WAAJ,CAAgBsC,QAAQ,CAAC6B,aAAT,CAAuB,eAAvB,CAAhB,CAAb,C,CAEA;;AACAC,MAAM,CAACC,MAAP,GAAiBpD,KAAD,IAAWiD,IAAI,CAACnD,IAAL,EAA3B,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACN;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;AAEA,eAAehB,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { db } from \"../firebase\";\n\nconst Contact = () => {\n  <form class=\"form contact-form\" action=\"https://formspree.io/donnyburnside1@gmail.com\">\n  <div>\n    <label class=\"form-label\" for=\"name\">Name</label>\n    <input class=\"form-control\" id=\"name\" name=\"name\" type=\"text\" required />\n  </div>\n  <div>\n    <label class=\"form-label\" for=\"email\">Email</label>\n    <input class=\"form-control\" id=\"email\" name=\"email\" type=\"email\" required />\n  </div>\n  <div>\n    <label class=\"form-label\" for=\"subject\">Subject</label>\n    <select class=\"form-control\" id=\"subject\" name=\"subject\" required>\n      <option value=\"\" selected disabled>Choose a Subject</option>\n      <optgroup label=\"Option Group\">\n        <option value=\"subject-one\">Subject One</option>\n        <option value=\"subject-two\">Subject Two</option>\n        <option value=\"subject-three\">Subject Three</option>\n      </optgroup>\n      <option value=\"subject-four\">Subject Four</option>\n      <option value=\"subject-five\">Subject Five</option>\n      <option value=\"subject-six\">Subject Six</option>\n    </select>\n  </div>\n  <div>\n    <label class=\"form-label\" for=\"message\">Message</label>\n    <textarea class=\"form-control\" id=\"message\" name=\"message\" required></textarea>\n  </div>\n  <div>\n    <label class=\"form-label\" for=\"subscribe\">Subscribe?</label>\n    <input class=\"\" id=\"subscribe\" name=\"subscribe\" type=\"checkbox\" />\n  </div>\n  <div>\n    <button class=\"button\" type=\"submit\">Submit</button>\n    <button class=\"button\" type=\"reset\">Clear</button>\n  </div>\n</form>\n  \n};\nclass ContactForm {\n  \n  constructor(el) {\n    this.element = el || null\n    this.action = el.action\n    this.fields = Object.keys(el.elements).reduce((obj, key) => {\n      if (key === el.elements[key].id) obj[key] = el.elements[key]\n      return obj\n    }, {})\n    console.log('Contact Form:', this)\n  }\n  \n  init() {\n    this.element.addEventListener('submit', (event) => this.onSubmit(event))\n  }\n  \n  onSubmit(event) {\n    event.preventDefault()\n    this.element.classList.remove('contact-form--errors')\n    this.element.classList.remove('contact-form--sent')\n    this.element.classList.add('contact-form--loading')\n    this.sendFormData(this.getFormData())\n      .then(response => {\n        if (response.status === 200) {\n          return response.json()\n                  .then(res => this.onSent(res))\n        } else {\n          throw 'An error occured while submitting the form'\n        }\n      })\n      .catch(err => this.onError(err))\n  }\n  \n  onSent(response) {\n    for (let i = 0; i < this.element.querySelectorAll('div').length; i++) {\n      this.element.querySelectorAll('div')[i].classList.add('is-hidden')\n    }\n    \n    let successElement = document.createElement('div')\n    successElement.innerHTML = `Message sent successfully`\n    this.element.appendChild(successElement)\n\n    this.element.classList.remove('contact-form--loading')\n    this.element.classList.add('contact-form--sent')\n    console.log('Sent:', response.success)\n  }\n  \n  onError(err = '') {\n    this.element.classList.remove('contact-form--loading')\n    this.element.classList.add('contact-form--errors')\n    console.error('Error:', err)\n  }\n  \n  sendFormData(data = {}) {\n    return new Promise((resolve, reject) => {\n      console.log('Send Data:', data)\n      fetch(this.action, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n      .then(response => resolve(response))\n      .catch(err => reject(err))\n    })\n  }\n  \n  getFormData() {\n    let formData = {},\n        values = []\n\n    Object.keys(this.fields).forEach(key => {\n      switch(this.fields[key].type) {\n        case 'checkbox':\n        case 'radio': {\n          formData[key] = this.fields[key].checked\n          break\n        }\n        case'select-one': {\n          if (!this.fields[key][this.fields[key].selectedIndex].disabled) {\n            formData[key] = this.fields[key][this.fields[key].selectedIndex].value\n          } else {\n            formData[key] = ''\n          }\n          break\n        }\n        case'select-multiple': {\n          Object.keys(this.fields[key].options).forEach(i => {\n            if (this.fields[key].options[i].selected && !this.fields[key].options[i].disabled) {\n              values.push(this.fields[key].options[i].value)\n            }\n          })\n          formData[key] = values.length > 0 ? values.join(', ') : ''\n          break\n        }\n        default: {\n          formData[key] = this.fields[key].value\n          break\n        }\n      }\n    })\n    return formData\n  }\n\n}\n\n// Create a new instance of the ContactForm class\nconst form = new ContactForm(document.querySelector('.contact-form'))\n\n// Initialise our instance of the ContactForm class when document has loaded\nwindow.onload = (event) => form.init()\n\n// form.init()\n\n// class ContactForm {\n  \n//   constructor(config = {}) {\n//     this.elements = {\n//       form: config.form || null,\n//       fields: config.form.elements || null\n//     }\n//     this.action = config.form.getAttribute('action') || null\n//   }\n  \n//   init() {\n//     this.elements.form.addEventListener('submit', (event) => {\n//       return this.onSubmit(event);\n//     });\n//   }\n  \n//   onSubmit(event) {\n//     event.preventDefault();\n//     let data = this.getFormData();\n\n//     this.sendFormData(data)\n//       .then(response => {\n//         if (response.status === 200) {\n//           this.onSent('Message sent successfully!')\n//         } else {\n//           throw 'An error occured while sending the message.'\n//         }\n//       })\n//     .catch(err => {\n//       this.onError(err);\n//     })\n//   }\n  \n//   getFormData() {\n//     let data = {},\n//         id;\n\n//     for (let i = 0; i < this.elements.fields.length; i++) {\n//       id = this.elements.fields[i].id;\n//       if (id !== '') data[id] = this.getFieldValue(this.elements.fields[i]);\n//     };\n\n//     return data;\n//   }\n  \n//   getFieldValue(field) {\n//     let values = [],\n//         value;\n\n//     switch(nodfield.typeeType) {\n//       case 'radio':\n//       case 'checkbox': {\n//         value = field.checked;\n//         break;\n//       }\n        \n//       case 'select-one': {\n//         if (!field[field.selectedIndex].disabled) {\n//           value = field.value;\n//         } else {\n//           value = '';\n//         }\n//         break;\n//       }\n        \n//       case 'select-multiple': {\n//         for (let i = 0; i < field.options.length; i++) {\n//           if (field.options[i].selected && !field.options[i].disabled) {\n//             values.push(field.options[i].value)\n//           }\n//         }\n//         value = values;\n//         break;\n//       }\n        \n//       default: {\n//         value = field.value;\n//         break;\n//       }\n//     }\n\n//     return value;\n//   }\n  \n//   sendFormData(data = {}) {\n//     return new Promise((resolve, reject) => {\n//       this.updateState('sending', 'Sending message...');\n      // fetch(this.action, {\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      //   method: 'POST',\n      //   body: JSON.stringify(data)\n      // })\n      // .then(response => {\n      //   resolve(response)\n      // })\n      // .catch(err => {\n      //   reject(err)\n      // })\n//     })\n//   }\n  \n//   onSent(message = '') {\n//     let el = document.createElement('div');\n//         el.classList.add('sent');\n//         el.innerHTML = '<p>Message sent!</p>';\n//     this.elements.form.appendChild(el);\n//     this.updateState('sent');\n//   }\n  \n//   onError(err = '') {\n//     this.updateState('error', err);\n//   }\n  \n//   updateState(state = 'default', message = '') {\n//     this.elements.form.setAttribute('data-state', state);\n//     this.elements.form.querySelector('small').textContent = message;\n//   }\n\n// }\n\n// const form = new ContactForm({\n//   form: document.querySelector('form')\n// });\n\n// form.init();\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}